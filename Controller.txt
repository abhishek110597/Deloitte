SSS
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import com.pms.deloitte.model.Contact;
import com.pms.deloitte.service.ContactPortalService;

@Controller
//@RequestMapping("contactPortal")
public class ContactPortalController {

	@Autowired
	ContactPortalService contactPortalService;

	@RequestMapping("/saveContact")
	public ModelAndView saveContact(Contact contact) {
		ModelAndView view = new ModelAndView("redirect:/contact");
		view.addObject("contact", new Contact());
		contactPortalService.addContact(contact);
//		System.out.println(contact);
		return view;

	}

//	@RequestMapping("/updateProduct")
//	public ModelAndView updateProduct(Product product) {
//		System.out.println("####### Product Controller updateProduct");
//		ModelAndView view = new ModelAndView("redirect:/product");
//		productService.updateProduct(product);
//		return view;
//
//	}

	@RequestMapping("/editContact/{contId}")
	public ModelAndView editContact(@PathVariable("contId")Integer userId) {
//		System.out.println("####### Contact Portal Controller editContact");
		ModelAndView view = new ModelAndView("contactPortal");
		Contact contact = contactPortalService.getContact(userId);
		List<Contact> allContacts = contactService.listContacts();
		view.addObject("contact", contact);
		view.addObject("allProduct", allContact);
		return view;

	}
	
	
	@RequestMapping(value = "/editContact/add/update")
	public String updateContact(Contact contact) {
		contactPortalService.updateContact(contact);
		return "redirect:/contact";

	}
	
	
	

//	 @RequestMapping("/deleteContact") public ModelAndView deleteContact(Contact
//	  product) { System.out.println("Product Controller deleteProduct");
//	  ModelAndView view = new ModelAndView("redirect:/product");
//	  productService.deleteProduct(product.getProductId()); return view;
//	  
//	  }
	
	@RequestMapping("/deleteContact/{contId}")
	public ModelAndView deleteContact(@PathVariable("contId") Integer userId) {
		ModelAndView view = new ModelAndView("redirect:/contact");
		contactPortalService.deleteContact(userId);
		return view;
	}

	@RequestMapping("/viewContact")
	public ModelAndView viewContact() {
		ModelAndView view = new ModelAndView("contactView");
		return view;
	}

	@RequestMapping("/contact")
	public ModelAndView contactPortal() {
		ModelAndView view = new ModelAndView("contactPortal");
		view.addObject("contact", new Contact());
		List<Contact> allContacts = contactPortalService.listContacts();
		view.addObject("allContacts", allContacts);
		return view;

	}
}